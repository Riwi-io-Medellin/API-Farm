// <auto-generated />
using System;
using API_Farm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Farm.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240918125000_CreateTableAnimals")]
    partial class CreateTableAnimals
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API_Farm.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int")
                        .HasColumnName("animal_type_id");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<double?>("WeightKg")
                        .HasColumnType("double")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.ToTable("animals");
                });

            modelBuilder.Entity("API_Farm.Models.AnimalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("animal_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "vertebrados de sangre caliente con pelo o pelaje.",
                            Name = "mamífero"
                        },
                        new
                        {
                            Id = 2,
                            Description = "vertebrados emplumados y alados capaces de volar.",
                            Name = "ave"
                        },
                        new
                        {
                            Id = 3,
                            Description = "vertebrados de sangre fría con escamas.",
                            Name = "reptil"
                        },
                        new
                        {
                            Id = 4,
                            Description = "vertebrados de sangre fría que pasan parte de su vida en el agua y parte en tierra.",
                            Name = "anfibio"
                        },
                        new
                        {
                            Id = 5,
                            Description = "vertebrados acuáticos con branquias, aletas y escamas.",
                            Name = "pez"
                        },
                        new
                        {
                            Id = 6,
                            Description = "animales sin columna vertebral, incluyendo insectos, arañas y moluscos.",
                            Name = "invertebrado"
                        });
                });

            modelBuilder.Entity("API_Farm.Models.Animal", b =>
                {
                    b.HasOne("API_Farm.Models.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");
                });
#pragma warning restore 612, 618
        }
    }
}
